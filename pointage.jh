
entity JourFerie {
	nom String,
    de LocalDate,
    jusqua LocalDate
}

entity Politique {
    nom String,
    de LocalDate,
    jusqua LocalDate
}


entity Presence {
	dureePresence Long,
    jour LocalDate
}
entity Mission {
    debut LocalDate,
    fin LocalDate
}
entity Conge {
    debut LocalDate,
    fin LocalDate
}
/**
 * The Employee entity.
 */
entity Employe {
	
	matricule Long ,
	nom String,
	prenom String,
    manager Long,
	fonction String
}

entity Inout {
	date LocalDate,
    type String,
	pointage Instant
}

entity Seance {
	
    eMatin Instant,
	eSoir Instant,
    sMatin Instant,
	sSoir Instant

}

entity User {
      userId Long,
      mdp String
}

relationship OneToOne {
      User{userId} to Employe{matricule}
}

relationship ManyToMany {
	Inout{presence} to Presence{inout}
}

relationship OneToMany {
	Employe to Conge{employe}
}
relationship OneToMany {
    Employe to Mission{employe}
}

relationship OneToMany {
	Employe to Inout{employe}
}


relationship ManyToOne {
       Employe to Seance
}

relationship OneToOne {
       Seance to Politique
}
relationship ManyToOne {
	Employe{manager} to Employe
}

relationship ManyToOne {
	JourFerie{date} to Politique
}

// defining multiple oneToOne relationships

// Set pagination options
paginate JobHistory, Employe with infinite-scroll
paginate Inout with pagination

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl except Employe, Inout

// Set an angular suffix
// angularSuffix * with mySuffix
